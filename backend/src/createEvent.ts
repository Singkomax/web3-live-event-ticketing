import * as dotenv from 'dotenv';
import { ethers } from 'ethers';

dotenv.config();

const contractAbi = [
  {
    type: 'constructor',
    inputs: [
      { name: '_eventName', type: 'string', internalType: 'string' },
      {
        name: '_eventDescription',
        type: 'string',
        internalType: 'string',
      },
      { name: '_eventDate', type: 'uint256', internalType: 'uint256' },
      {
        name: '_eventOrganizer',
        type: 'address',
        internalType: 'address',
      },
      { name: '_baseURI', type: 'string', internalType: 'string' },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'approve',
    inputs: [
      { name: 'to', type: 'address', internalType: 'address' },
      { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'balanceOf',
    inputs: [{ name: 'owner', type: 'address', internalType: 'address' }],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'eventDate',
    inputs: [],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'eventDescription',
    inputs: [],
    outputs: [{ name: '', type: 'string', internalType: 'string' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'eventOrganizer',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getApproved',
    inputs: [{ name: 'tokenId', type: 'uint256', internalType: 'uint256' }],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'isApprovedForAll',
    inputs: [
      { name: 'owner', type: 'address', internalType: 'address' },
      { name: 'operator', type: 'address', internalType: 'address' },
    ],
    outputs: [{ name: '', type: 'bool', internalType: 'bool' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'mintTickets',
    inputs: [
      {
        name: '_ticketTypes',
        type: 'tuple[]',
        internalType: 'struct EventTicket.TicketType[]',
        components: [
          { name: 'name', type: 'string', internalType: 'string' },
          { name: 'price', type: 'uint256', internalType: 'uint256' },
          { name: 'quantity', type: 'uint256', internalType: 'uint256' },
        ],
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'name',
    inputs: [],
    outputs: [{ name: '', type: 'string', internalType: 'string' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'owner',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'ownerOf',
    inputs: [{ name: 'tokenId', type: 'uint256', internalType: 'uint256' }],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'renounceOwnership',
    inputs: [],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'safeTransferFrom',
    inputs: [
      { name: 'from', type: 'address', internalType: 'address' },
      { name: 'to', type: 'address', internalType: 'address' },
      { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'safeTransferFrom',
    inputs: [
      { name: 'from', type: 'address', internalType: 'address' },
      { name: 'to', type: 'address', internalType: 'address' },
      { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
      { name: 'data', type: 'bytes', internalType: 'bytes' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setApprovalForAll',
    inputs: [
      { name: 'operator', type: 'address', internalType: 'address' },
      { name: 'approved', type: 'bool', internalType: 'bool' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'supportsInterface',
    inputs: [{ name: 'interfaceId', type: 'bytes4', internalType: 'bytes4' }],
    outputs: [{ name: '', type: 'bool', internalType: 'bool' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'symbol',
    inputs: [],
    outputs: [{ name: '', type: 'string', internalType: 'string' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'ticketTypeOfToken',
    inputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    outputs: [{ name: '', type: 'string', internalType: 'string' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'ticketTypes',
    inputs: [{ name: '', type: 'string', internalType: 'string' }],
    outputs: [
      { name: 'name', type: 'string', internalType: 'string' },
      { name: 'price', type: 'uint256', internalType: 'uint256' },
      { name: 'quantity', type: 'uint256', internalType: 'uint256' },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'tokenURI',
    inputs: [{ name: 'tokenId', type: 'uint256', internalType: 'uint256' }],
    outputs: [{ name: '', type: 'string', internalType: 'string' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'transferFrom',
    inputs: [
      { name: 'from', type: 'address', internalType: 'address' },
      { name: 'to', type: 'address', internalType: 'address' },
      { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'transferOwnership',
    inputs: [{ name: 'newOwner', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'event',
    name: 'Approval',
    inputs: [
      {
        name: 'owner',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'approved',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'tokenId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'ApprovalForAll',
    inputs: [
      {
        name: 'owner',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'operator',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'approved',
        type: 'bool',
        indexed: false,
        internalType: 'bool',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'BatchMetadataUpdate',
    inputs: [
      {
        name: '_fromTokenId',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: '_toTokenId',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'MetadataUpdate',
    inputs: [
      {
        name: '_tokenId',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'OwnershipTransferred',
    inputs: [
      {
        name: 'previousOwner',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'newOwner',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'Transfer',
    inputs: [
      {
        name: 'from',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'to',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'tokenId',
        type: 'uint256',
        indexed: true,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'error',
    name: 'ERC721IncorrectOwner',
    inputs: [
      { name: 'sender', type: 'address', internalType: 'address' },
      { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
      { name: 'owner', type: 'address', internalType: 'address' },
    ],
  },
  {
    type: 'error',
    name: 'ERC721InsufficientApproval',
    inputs: [
      { name: 'operator', type: 'address', internalType: 'address' },
      { name: 'tokenId', type: 'uint256', internalType: 'uint256' },
    ],
  },
  {
    type: 'error',
    name: 'ERC721InvalidApprover',
    inputs: [{ name: 'approver', type: 'address', internalType: 'address' }],
  },
  {
    type: 'error',
    name: 'ERC721InvalidOperator',
    inputs: [{ name: 'operator', type: 'address', internalType: 'address' }],
  },
  {
    type: 'error',
    name: 'ERC721InvalidOwner',
    inputs: [{ name: 'owner', type: 'address', internalType: 'address' }],
  },
  {
    type: 'error',
    name: 'ERC721InvalidReceiver',
    inputs: [{ name: 'receiver', type: 'address', internalType: 'address' }],
  },
  {
    type: 'error',
    name: 'ERC721InvalidSender',
    inputs: [{ name: 'sender', type: 'address', internalType: 'address' }],
  },
  {
    type: 'error',
    name: 'ERC721NonexistentToken',
    inputs: [{ name: 'tokenId', type: 'uint256', internalType: 'uint256' }],
  },
  {
    type: 'error',
    name: 'OwnableInvalidOwner',
    inputs: [{ name: 'owner', type: 'address', internalType: 'address' }],
  },
  {
    type: 'error',
    name: 'OwnableUnauthorizedAccount',
    inputs: [{ name: 'account', type: 'address', internalType: 'address' }],
  },
];

const contractBytecode = {
  object:
    '',
  sourceMap:
    '369:2029:42:-:0;;;1004:398;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1380:113:28;;;;;;;;;;;;-1:-1:-1;;;1380:113:28;;;;1224:15:42;;1197:10;;-1:-1:-1;1446:13:28;1197:10:42;-1:-1:-1;1446:13:28;:::i;:::-;-1:-1:-1;1469:7:28;:17;1479:7;1469;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:23;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:23;;1350:1;1322:31;;;4727:51:44;4700:18;;1322:31:23;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1251:16:42::2;:36;1270:17:::0;1251:16;:36:::2;:::i;:::-;-1:-1:-1::0;1297:9:42::2;:22:::0;;;1329:14:::2;:32:::0;;-1:-1:-1;;;;;;1329:32:42::2;-1:-1:-1::0;;;;;1329:32:42;::::2;;::::0;;1371:13:::2;:24;1387:8:::0;1371:13;:24:::2;:::i;:::-;;1004:398:::0;;;;;369:2029;;2912:187:23;3004:6;;;-1:-1:-1;;;;;3020:17:23;;;-1:-1:-1;;;;;;3020:17:23;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:127:44:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:44;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:44;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:44:o;991:996::-;1127:6;1135;1143;1151;1159;1212:3;1200:9;1191:7;1187:23;1183:33;1180:53;;;1229:1;1226;1219:12;1180:53;1256:16;;-1:-1:-1;;;;;1321:14:44;;;1318:34;;;1348:1;1345;1338:12;1318:34;1371:61;1424:7;1415:6;1404:9;1400:22;1371:61;:::i;:::-;1361:71;;1478:2;1467:9;1463:18;1457:25;1441:41;;1507:2;1497:8;1494:16;1491:36;;;1523:1;1520;1513:12;1491:36;1546:63;1601:7;1590:8;1579:9;1575:24;1546:63;:::i;:::-;1649:2;1634:18;;1628:25;1696:2;1681:18;;1675:25;1536:73;;-1:-1:-1;1628:25:44;-1:-1:-1;1675:25:44;-1:-1:-1;;;;;;1729:31:44;;1719:42;;1709:70;;1775:1;1772;1765:12;1709:70;1849:3;1834:19;;1828:26;1798:5;;-1:-1:-1;1866:16:44;;;1863:36;;;1895:1;1892;1885:12;1863:36;;1918:63;1973:7;1962:8;1951:9;1947:24;1918:63;:::i;:::-;1908:73;;;991:996;;;;;;;;:::o;1992:380::-;2071:1;2067:12;;;;2114;;;2135:61;;2189:4;2181:6;2177:17;2167:27;;2135:61;2242:2;2234:6;2231:14;2211:18;2208:38;2205:161;;2288:10;2283:3;2279:20;2276:1;2269:31;2323:4;2320:1;2313:15;2351:4;2348:1;2341:15;2205:161;;1992:380;;;:::o;2503:545::-;2605:2;2600:3;2597:11;2594:448;;;2641:1;2666:5;2662:2;2655:17;2711:4;2707:2;2697:19;2781:2;2769:10;2765:19;2762:1;2758:27;2752:4;2748:38;2817:4;2805:10;2802:20;2799:47;;;-1:-1:-1;2840:4:44;2799:47;2895:2;2890:3;2886:12;2883:1;2879:20;2873:4;2869:31;2859:41;;2950:82;2968:2;2961:5;2958:13;2950:82;;;3013:17;;;2994:1;2983:13;2950:82;;;2954:3;;;2594:448;2503:545;;;:::o;3224:1352::-;3344:10;;-1:-1:-1;;;;;3366:30:44;;3363:56;;;3399:18;;:::i;:::-;3428:97;3518:6;3478:38;3510:4;3504:11;3478:38;:::i;:::-;3472:4;3428:97;:::i;:::-;3580:4;;3644:2;3633:14;;3661:1;3656:663;;;;4363:1;4380:6;4377:89;;;-1:-1:-1;4432:19:44;;;4426:26;4377:89;-1:-1:-1;;3181:1:44;3177:11;;;3173:24;3169:29;3159:40;3205:1;3201:11;;;3156:57;4479:81;;3626:944;;3656:663;2450:1;2443:14;;;2487:4;2474:18;;-1:-1:-1;;3692:20:44;;;3810:236;3824:7;3821:1;3818:14;3810:236;;;3913:19;;;3907:26;3892:42;;4005:27;;;;3973:1;3961:14;;;;3840:19;;3810:236;;;3814:3;4074:6;4065:7;4062:19;4059:201;;;4135:19;;;4129:26;-1:-1:-1;;4218:1:44;4214:14;;;4230:3;4210:24;4206:37;4202:42;4187:58;4172:74;;4059:201;-1:-1:-1;;;;;4306:1:44;4290:14;;;4286:22;4273:36;;-1:-1:-1;3224:1352:44:o;4581:203::-;369:2029:42;;;;;;',
  linkReferences: {},
};

export async function main(params: { user_data: any }) {
  const provider = new ethers.JsonRpcProvider(process.env.QUICKNODE_RPC_URL);

  const wallet = new ethers.Wallet(
    process.env.ADMIN_PRIVATE_KEY || 'letmeinplease',
    provider
  );

  const EventTicketNFT = new ethers.ContractFactory(
    contractAbi,
    contractBytecode,
    wallet
  );

  const contract = await EventTicketNFT.deploy(
    params.user_data.name,
    params.user_data.description,
    params.user_data.date,
    wallet.address,
    params.user_data.baseURI
  );

  await contract.waitForDeployment();

  return {
    contractAddress: await contract.getAddress(),
  };
}
